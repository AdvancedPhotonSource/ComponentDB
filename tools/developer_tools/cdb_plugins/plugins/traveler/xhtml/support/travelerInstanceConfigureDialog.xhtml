<?xml version="1.0" encoding="UTF-8" ?>
<!--
Copyright (c) UChicago Argonne, LLC. All rights reserved.
See LICENSE file.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:h="http://xmlns.jcp.org/jsf/html">

    <ui:param name="travelerDomainInstanceController"
              value="#{travelerDomainInstanceController != null
                       ? travelerDomainInstanceController
                       : itemTravelerDomainInventoryController}" />

    <p:dialog id="travelerInstanceConfigureDialog" 
              widgetVar="travelerInstanceConfigureDialogWidget" 
              header="Configure Traveler Instance" 
              styleClass="viewTransparentBackgroundDialog"
              closable="false"
              resizable="false"
              modal="true"
              focus="travelerStatusSelectOneButton">
        <p:panelGrid columns="2" rendered="#{travelerDomainInstanceController.currentTravelerInstance != null}">

            <p:outputLabel for="travelerTemplateConfigTitle" 
                           value="Title" 
                           styleClass="entityDataLabel"/>            
            <p:inputText id="travelerTemplateConfigTitle"
                         value="#{travelerDomainInstanceController.currentTravelerEditTitle}" 
                         styleClass="entityDataEmphasizedText"/>            

            <p:outputLabel for="travelerTemplateConfigDescription" value="Description" styleClass="entityDataLabel"/>
            <p:inputTextarea id="travelerTemplateConfigDescription"
                             value="#{travelerDomainInstanceController.currentTravelerEditDescription}" 
                             styleClass="entityDataEmphasizedText"/>


            <p:outputLabel value="Deadline" styleClass="entityDataLabel"/>
            <p:calendar value="#{travelerDomainInstanceController.currentTravelerDeadline}" />


            <p:outputLabel value="Status" styleClass="entityDataLabel"/>
            <p:selectOneButton value="#{travelerDomainInstanceController.currentTravelerSelectedStatus}" id="travelerStatusSelectOneButton"> 
                <f:selectItems value="#{travelerDomainInstanceController.currentTravelerStatusOptions}"/>
            </p:selectOneButton>

        </p:panelGrid>

        <p:tooltip id="travelerInstanceStatusConfigurePanelGridRowToolTip"
                   for="travelerStatusSelectOneButton"
                   styleClass="viewTransparentBackground">
            <ui:include src="travelerInstanceStatusDescriptionPanelGrid.xhtml" />
        </p:tooltip>
        
        <f:facet name="footer" class="dialog">
            <p:commandButton value="Update Traveler"
                             update="travelerInstanceConfigureDialog" 
                             action="#{travelerDomainInstanceController.updateTravelerInstanceConfiguration('successTravelerInstanceConfigureDialog()')}"
                             icon="fa fa-check"/>
            <p:commandButton value="Cancel" alt="Cancel" 
                             action="#{travelerDomainInstanceController.resetUpdateTravelerInstanceConfiguration()}"
                             oncomplete="successTravelerInstanceConfigureDialog()" 
                             icon="fa fa-close"/>
        </f:facet>


        <p:remoteCommand name="successTravelerInstanceConfigureDialog"
                         oncomplete="PF('travelerInstanceConfigureDialogWidget').hide();
                         updateTravelerInstanceInfoDialog();" />

        <p:remoteCommand name="updateTravelerInstanceConfigureDialog" 
                         update="travelerInstanceConfigureDialog" 
                         oncomplete="PF('travelerInstanceConfigureDialogWidget').initPosition();
                         PF('travelerInstanceConfigureDialogWidget').show();"/>

    </p:dialog>


</ui:composition>

