<?xml version="1.0" encoding="UTF-8" ?>
<!--
Copyright (c) UChicago Argonne, LLC. All rights reserved.
See LICENSE file.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core">    
    <p:outputPanel rendered="#{billOfMaterialItem.hasCatalogItem()}">
        <p:outputPanel rendered="#{renderEditPanelHeader}">
            <div>
                <h1 style="color: #4e80b6;">Define #{billOfMaterialItem.toString()}</h1>
            </div>
        </p:outputPanel>

        <p:outputPanel rendered="#{!entityController.isRenderBomOptionalUnspecified(billOfMaterialItem)}" >
            <!-- Temp disabled... prior rendered.. billOfMaterialItem.partItem and loginController.loggedInAsAdmin -->
            <p:panelGrid columns="2" rendered="#{false}">   
                <p:selectOneButton id="newInstanceAddOptions#{viewName}"
                                   value="#{billOfMaterialItem.stateSelection}"
                                   styleClass="entityDataEmphasizedText">
                    <f:selectItem itemLabel="Select Existing: #{billOfMaterialItem.existingInventoryItemCountExistingItems}" itemValue="existingItem" />
                    <f:selectItem itemLabel="Create New" itemValue="newItem" itemDisabled="#{disabledCreateNewOption}"/>
                    <p:ajax onstart="PF('loadingDialog').show()" oncomplete="PF('loadingDialog').hide()" update="#{fullUpateTarget}"/>
                </p:selectOneButton>

                <ui:include src="../../item/private/templateDefaults/itemFieldHelpFragments/itemHelpFragment.xhtml">
                    <ui:param name="helpFragmentText"
                              value="Select an option for this part of the assembly." />
                </ui:include>
            </p:panelGrid>
            <p/>

            <p:outputPanel rendered="#{(entityController.isRenderBomExisting(billOfMaterialItem) 
                                       or entityController.isRenderBomPlaceholder(billOfMaterialItem)) 
                                       and billOfMaterialItem.partItem}">
                <p:panel>
                    <ui:include src="../../item/private/itemSelectDataTable.xhtml">
                        <ui:param name="overrideSelectionDataModel" value="#{true}" /> 
                        <ui:param name="selectDataModel" value="#{billOfMaterialItem.existingInventoryItemSelectDataModel}" />
                        <ui:param name="overrideSelectionValue" value="#{true}" />
                        <ui:param name="selectionValue" value="#{billOfMaterialItem.inventoryItem}" />                        
                        <ui:param name="selectionController" value="#{entityController}" />
                        <ui:param name="updateTarget" value="#{fullUpateTarget}" />
                    </ui:include>
                </p:panel>
                <p:commandButton value="Clear Selection" update="#{fullUpateTarget}"
                                 rendered="#{billOfMaterialItem.inventoryItem != null}"> 
                    <f:setPropertyActionListener value="#{null}"
                                                 target="#{billOfMaterialItem.inventoryItem}"/>
                </p:commandButton>
            </p:outputPanel>

            <p:outputPanel rendered="#{entityController.isRenderBomEdit(billOfMaterialItem) or !billOfMaterialItem.partItem}">
                <ui:include src="itemDomainInventoryBaseBillOfMaterialsNewItemEditPanel.xhtml">
                    <ui:param name="itemObject" value="#{billOfMaterialItem.inventoryItem}"/>            
                </ui:include>
            </p:outputPanel>
        </p:outputPanel>

        <p:outputPanel rendered="#{billOfMaterialItem.optional}">
            <p:outputPanel rendered="#{entityController.isRenderBomOptionalUnspecified(billOfMaterialItem)}">
                <div>
                    <h1 style="color: #4e80b6;">This part is optional for the assembly.</h1>
                </div>
                <p:commandButton value="Assign Optional Part"
                                 action="#{entityController.createOptionalBillOfMaterialsPart(billOfMaterialItem)}"
                                 update="#{fullUpateTarget}"
                                 />
            </p:outputPanel>
            <p:outputPanel rendered="#{!entityController.isRenderBomOptionalUnspecified(billOfMaterialItem)}">                
                <ui:param name="selectedBOMItemElementInDb"
                          value="#{entityController.isBOMInventoryItemElementInDB(billOfMaterialItem)}" />
                <p:commandButton value="Remove Optional Part" icon="fa fa-close"
                                 onclick="removeOptionalPart()"
                                 rendered="#{!selectedBOMItemElementInDb}"/>
                
                <p:commandButton value="Remove Optional Part" icon="fa fa-trash"
                                 onclick="PF('removeOptionalPartConfirmDialogWidget').show()"
                                 rendered="#{selectedBOMItemElementInDb}"/>
                
                <p:remoteCommand name="removeOptionalPart"
                                 update="#{fullUpateTarget}"
                                 action="#{entityController.removeOptionalBillOfMaterialsPart(billOfMaterialItem)}" />

            </p:outputPanel>

        </p:outputPanel>

    </p:outputPanel>       
    <p:outputPanel rendered="#{!billOfMaterialItem.hasCatalogItem()}">
        <div>
            <h1 style="color: #4e80b6;">No Catalog Items have been defined for this part.</h1>
        </div>
    </p:outputPanel>


</ui:composition>


